# ========================================
# docker/Caddyfile
# ========================================
{$DOMAIN:localhost} {
    # Reverse proxy pour l'API Laravel
    handle /api/* {
        reverse_proxy app:80
    }
    
    # Reverse proxy pour les autres routes Laravel (Inertia)
    handle /* {
        reverse_proxy app:80
    }
    
    # Gestion des erreurs
    handle_errors {
        respond "Service temporairement indisponible" 503
    }
    
    # Headers de sécurité
    header {
        # HSTS
        Strict-Transport-Security max-age=31536000;
        # Content Security Policy (ajustez selon vos besoins)
        Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self';"
        # Autres headers de sécurité
        X-Content-Type-Options nosniff
        X-Frame-Options DENY
        Referrer-Policy strict-origin-when-cross-origin
    }
    
    # Logs
    log {
        output file /var/log/caddy/access.log
        format json
    }
}

# ========================================
# docker/nginx.conf
# ========================================
events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private must-revalidate no-transform auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/x-javascript
        application/xml+rss
        application/javascript
        application/json;
    
    server {
        listen 80;
        server_name _;
        root /var/www/html/public;
        index index.php index.html;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        
        # File upload limit
        client_max_body_size 10M;
        
        # Handle Laravel routes
        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }
        
        # Handle PHP files
        location ~ \.php$ {
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass 127.0.0.1:9000;
            fastcgi_index index.php;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
            fastcgi_read_timeout 300;
        }
        
        # Handle static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri =404;
        }
        
        # Deny access to sensitive files
        location ~ /\. {
            deny all;
        }
        
        location ~ composer\.(json|lock)$ {
            deny all;
        }
        
        location ~ package(-lock)?\.json$ {
            deny all;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}

# ========================================
# docker/supervisord.conf
# ========================================
[supervisord]
nodaemon=true
user=root
logfile=/var/log/supervisor/supervisord.log
pidfile=/var/run/supervisord.pid

[program:nginx]
command=nginx -g "daemon off;"
autostart=true
autorestart=true
startretries=5
numprocs=1
startsecs=0
process_name=%(program_name)s_%(process_num)02d
stderr_logfile=/var/log/supervisor/%(program_name)s_stderr.log
stderr_logfile_maxbytes=10MB
stdout_logfile=/var/log/supervisor/%(program_name)s_stdout.log
stdout_logfile_maxbytes=10MB

[program:php-fpm]
command=php-fpm
autostart=true
autorestart=true
startretries=5
numprocs=1
startsecs=0
process_name=%(program_name)s_%(process_num)02d
stderr_logfile=/var/log/supervisor/%(program_name)s_stderr.log
stderr_logfile_maxbytes=10MB
stdout_logfile=/var/log/supervisor/%(program_name)s_stdout.log
stdout_logfile_maxbytes=10MB

# ========================================
# docker/php/php.ini
# ========================================
; Configuration PHP pour production

; Limite de mémoire
memory_limit = 256M

; Upload de fichiers
upload_max_filesize = 10M
post_max_size = 10M
max_file_uploads = 20

; Timeouts
max_execution_time = 300
max_input_time = 300

; Sessions
session.cookie_secure = 1
session.cookie_httponly = 1
session.use_strict_mode = 1

; Sécurité
expose_php = Off
allow_url_fopen = Off
allow_url_include = Off

; OPcache (recommandé pour la production)
opcache.enable = 1
opcache.memory_consumption = 128
opcache.interned_strings_buffer = 8
opcache.max_accelerated_files = 4000
opcache.revalidate_freq = 2
opcache.fast_shutdown = 1

; ========================================
# .env.production (template)
# ========================================
APP_NAME=ASCBP
APP_ENV=production
APP_KEY=base64:JzVoE+ScaPX4ayoD+E7BgGKJcd8S3uIeq2tNO6290g4=
APP_DEBUG=false
APP_URL=https://votre-domaine.fr

APP_LOCALE=fr
APP_FALLBACK_LOCALE=en
APP_FAKER_LOCALE=fr_FR

# Base de données
DB_CONNECTION=mysql
DB_HOST=db
DB_PORT=3306
DB_DATABASE=ascbp
DB_USERNAME=ascbp_user
DB_PASSWORD=mot_de_passe_securise_a_changer

# Cache et sessions avec Redis
CACHE_STORE=redis
SESSION_DRIVER=redis
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=

# Queue (avec Redis)
QUEUE_CONNECTION=redis
BROADCAST_CONNECTION=redis

# Mail (exemple avec SMTP)
MAIL_MAILER=smtp
MAIL_HOST=smtp.votre-provider.com
MAIL_PORT=587
MAIL_USERNAME=votre-email@domaine.fr
MAIL_PASSWORD=votre-mot-de-passe-email
MAIL_ENCRYPTION=tls
MAIL_FROM_ADDRESS=noreply@ascbp.fr
MAIL_FROM_NAME="ASCBP"

# S3 Storage (OVH Cloud)
FILESYSTEM_DISK=s3
AWS_ACCESS_KEY_ID=b7e4ced0969944b38dcd352cd5f80eb6
AWS_SECRET_ACCESS_KEY=6b9bca7ea17549c79835110befefb680
AWS_DEFAULT_REGION=sbg
AWS_BUCKET=ascbp-s3
AWS_ENDPOINT=https://s3.sbg.io.cloud.ovh.net
AWS_USE_PATH_STYLE_ENDPOINT=true
AWS_URL=https://ascbp-s3.s3.sbg.io.cloud.ovh.net

# Logs
LOG_CHANNEL=stack
LOG_STACK=single,errorlog
LOG_LEVEL=warning

# Sécurité
BCRYPT_ROUNDS=12
HASH_DRIVER=argon2id

# Variables Docker Compose
DB_PASSWORD=mot_de_passe_securise_a_changer
DB_ROOT_PASSWORD=root_password_securise_a_changer
DOMAIN=votre-domaine.fr

# ========================================
# docker/mysql/init/01-create-database.sql
# ========================================
-- Script d'initialisation de la base de données
CREATE DATABASE IF NOT EXISTS ascbp CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

-- Optionnel : créer un utilisateur dédié avec des permissions limitées
-- GRANT ALL PRIVILEGES ON ascbp.* TO 'ascbp_user'@'%';
-- FLUSH PRIVILEGES;